# Generated by Django 5.1.1 on 2025-06-13 16:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('profiles', '0006_remove_project_chatwoot_bot_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='answersource',
            name='chunk_index',
            field=models.PositiveIntegerField(blank=True, help_text='Indice del chunk nel documento', null=True),
        ),
        migrations.AlterField(
            model_name='answersource',
            name='content',
            field=models.TextField(help_text='Contenuto estratto dalla fonte'),
        ),
        migrations.AlterField(
            model_name='answersource',
            name='conversation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='profiles.projectconversation'),
        ),
        migrations.AlterField(
            model_name='answersource',
            name='page_number',
            field=models.PositiveIntegerField(blank=True, help_text='Pagina del documento (se applicabile)', null=True),
        ),
        migrations.AlterField(
            model_name='answersource',
            name='project_file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='profiles.projectfile'),
        ),
        migrations.AlterField(
            model_name='answersource',
            name='project_note',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='profiles.projectnote'),
        ),
        migrations.AlterField(
            model_name='answersource',
            name='project_url',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='profiles.projecturl'),
        ),
        migrations.AlterField(
            model_name='answersource',
            name='relevance_score',
            field=models.FloatField(blank=True, help_text='Score di rilevanza della fonte', null=True),
        ),
        migrations.CreateModel(
            name='ConversationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(db_index=True, max_length=64, unique=True)),
                ('title', models.CharField(blank=True, help_text="Titolo generato automaticamente o fornito dall'utente", max_length=255)),
                ('context_window_size', models.IntegerField(default=10, help_text='Numero di turni precedenti da mantenere nel contesto')),
                ('is_active', models.BooleanField(default=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Dati aggiuntivi come preferenze utente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_interaction_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_sessions', to='profiles.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_interaction_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversationTurn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turn_number', models.PositiveIntegerField(help_text='Numero progressivo del turno nella sessione')),
                ('user_message', models.TextField(help_text="Messaggio/domanda dell'utente")),
                ('ai_response', models.TextField(help_text="Risposta generata dall'AI")),
                ('context_used', models.JSONField(blank=True, default=dict, help_text='Contesto conversazionale utilizzato per questa risposta')),
                ('prompt_used', models.TextField(blank=True, help_text='Prompt finale utilizzato per generare la risposta')),
                ('retrieval_query', models.TextField(blank=True, help_text='Query di ricerca utilizzata nel sistema RAG')),
                ('sources_count', models.PositiveIntegerField(default=0, help_text='Numero di fonti utilizzate')),
                ('processing_time', models.FloatField(blank=True, help_text='Tempo di elaborazione in secondi', null=True)),
                ('tokens_used', models.PositiveIntegerField(blank=True, help_text='Token utilizzati per la risposta', null=True)),
                ('user_rating', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Valutazione utente 1-5', null=True)),
                ('user_feedback', models.TextField(blank=True, help_text="Feedback testuale dell'utente")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_turns', to='profiles.conversationsession')),
            ],
            options={
                'ordering': ['turn_number'],
            },
        ),
        migrations.AddField(
            model_name='answersource',
            name='conversation_turn',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='profiles.conversationturn'),
        ),
        migrations.AddIndex(
            model_name='answersource',
            index=models.Index(fields=['conversation'], name='profiles_an_convers_2b7a10_idx'),
        ),
        migrations.AddIndex(
            model_name='answersource',
            index=models.Index(fields=['conversation_turn'], name='profiles_an_convers_7f2b0b_idx'),
        ),
        migrations.AddIndex(
            model_name='answersource',
            index=models.Index(fields=['relevance_score'], name='profiles_an_relevan_04e322_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationsession',
            index=models.Index(fields=['project', 'is_active'], name='profiles_co_project_5ca8f2_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationsession',
            index=models.Index(fields=['user', 'is_active'], name='profiles_co_user_id_f24990_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationsession',
            index=models.Index(fields=['session_id'], name='profiles_co_session_eb75c5_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationturn',
            index=models.Index(fields=['session', 'turn_number'], name='profiles_co_session_2ede2e_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationturn',
            index=models.Index(fields=['created_at'], name='profiles_co_created_0ab079_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conversationturn',
            unique_together={('session', 'turn_number')},
        ),
    ]
