# Generated by Django 5.1.1 on 2025-04-17 17:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('profiles', '0009_projectindexstatus_notes_hash'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RagDefaultSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('chunk_size', models.IntegerField(default=500, help_text='Lunghezza di ciascun frammento in caratteri')),
                ('chunk_overlap', models.IntegerField(default=50, help_text='Sovrapposizione fra chunk adiacenti')),
                ('similarity_top_k', models.IntegerField(default=6, help_text='Numero di frammenti più rilevanti da utilizzare')),
                ('mmr_lambda', models.FloatField(default=0.7, help_text='Bilanciamento tra rilevanza e diversità (0-1)')),
                ('similarity_threshold', models.FloatField(default=0.7, help_text='Soglia minima di similarità per includere risultati')),
                ('retriever_type', models.CharField(choices=[('mmr', 'Maximum Marginal Relevance'), ('similarity', 'Similarity Search'), ('similarity_score_threshold', 'Similarity with Threshold')], default='mmr', help_text='Strategia di ricerca per trovare frammenti rilevanti', max_length=50)),
                ('system_prompt', models.TextField(blank=True)),
                ('auto_citation', models.BooleanField(default=True, help_text='Includi riferimenti alle fonti nelle risposte')),
                ('prioritize_filenames', models.BooleanField(default=True, help_text='Dai priorità ai documenti con nomi menzionati nella domanda')),
                ('equal_notes_weight', models.BooleanField(default=True, help_text='Tratta note e documenti con uguale importanza')),
                ('strict_context', models.BooleanField(default=False, help_text='Risposte basate SOLO sui documenti, rifiuta di rispondere se mancano informazioni')),
                ('is_default', models.BooleanField(default=False, help_text='Indica se questa configurazione è quella predefinita')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Impostazione predefinita RAG',
                'verbose_name_plural': 'Impostazioni predefinite RAG',
            },
        ),
        migrations.CreateModel(
            name='RagTemplateType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='RAGConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chunk_size', models.IntegerField(blank=True, null=True)),
                ('chunk_overlap', models.IntegerField(blank=True, null=True)),
                ('similarity_top_k', models.IntegerField(blank=True, null=True)),
                ('mmr_lambda', models.FloatField(blank=True, null=True)),
                ('similarity_threshold', models.FloatField(blank=True, null=True)),
                ('retriever_type', models.CharField(blank=True, max_length=50, null=True)),
                ('system_prompt', models.TextField(blank=True, null=True)),
                ('auto_citation', models.BooleanField(blank=True, null=True)),
                ('prioritize_filenames', models.BooleanField(blank=True, null=True)),
                ('equal_notes_weight', models.BooleanField(blank=True, null=True)),
                ('strict_context', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rag_config', to=settings.AUTH_USER_MODEL)),
                ('current_settings', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_configs', to='profiles.ragdefaultsettings')),
            ],
        ),
        migrations.AddField(
            model_name='ragdefaultsettings',
            name='template_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='default_settings', to='profiles.ragtemplatetype'),
        ),
    ]
