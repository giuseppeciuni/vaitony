django-admin startproject django-dashboard-kickstarter

# libraries
pip3 install django
pip3 install mysql
pip3 install mysqlclient
pip3 install requests
pip3 install django-cors-headers
pip3 install Pillow
pip3 install djangorestframework

# Project Apps
python3 manage.py startapp profiles
python3 manage.py startapp dashboard

# Database migrations
python3 manage.py makemigrations
python3 manage.py migrate

# Root management
python3 manage.py createsuperuser

# Generate requirements.txt
pip3 freeze > requirements.txt

# Build up the environment using requirements:
pip3 install -r requirements.txt




dopo che si installano tutte le librerie da utente del sistema operativo vaitony bisogna attivare venv3.12 ed eseguire i comandi:
source /home/vaitony/venv3.12/bin/activate

playwright install chromium

installare su sistema operativo vaitony il pacchetto di sistema:
apt-get install -y \
    libnss3 \
    libnspr4 \
    libatk1.0-0t64 \
    libatk-bridge2.0-0t64 \
    libcups2t64 \
    libatspi2.0-0t64 \
    libxcomposite1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libpango-1.0-0 \
    libcairo2 \
    libasound2t64









# SERVER

creare un file di configurazione per gunicorn in /etc/systemd/system/vaitony.service con il seguente contenuto:
[Unit]
Description=Gunicorn daemon for VaiTony Django application
After=network.target

[Service]
User=vaitony
Group=www-data
WorkingDirectory=/var/www/vaitony
Environment="PYTHONPATH=/var/www/vaitony"
# Aggiungi queste variabili d'ambiente per aumentare il logging
Environment="DJANGO_LOG_LEVEL=DEBUG"
Environment="GUNICORN_LOG_LEVEL=debug"
ExecStart=/var/www/vaitony/start_gunicorn.sh
# Aggiungi la redirezione standard error e output a file di log
StandardOutput=append:/var/www/vaitony/logs/gunicorn_stdout.log
StandardError=append:/var/www/vaitony/logs/gunicorn_stderr.log
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target


creare un file di avvio per il servizio gunicorn in /var/wwww/vaitony/start_gunicorn.sh con il seguente contenuto:
#!/bin/bash
cd /var/www/vaitony
source venv3.12/bin/activate
# Assicurati che le directory per i log esistano
mkdir -p logs
# Configura l'ambiente
export PYTHONPATH=/var/www/vaitony
export DJANGO_SETTINGS_MODULE=vaitony_project.settings
# Esegui Gunicorn
exec gunicorn \
  --access-logfile logs/access.log \
  --error-logfile logs/error.log \
  --log-level debug \
  --workers 1 \
  --bind 127.0.0.1:8000 \
  vaitony_project.wsgi:application



chmod u+x /var/wwww/vaitony/start_gunicorn.sh
cd /var/www/vaitony
chown -R vaitony:www-data logs
















------------------ Mysql ----------------------
use mysql;
CREATE USER 'vai_tony_user'@'localhost' IDENTIFIED BY 'sdjfic023u89efjos39';
GRANT ALL PRIVILEGES ON vai_tony.* TO 'vai_tony_user'@'localhost';
FLUSH PRIVILEGES;
create database vai_tony;
-----------------------------------------------


# questo potrebbe essere richiesto in mysql del server
GRANT SESSION_VARIABLES_ADMIN ON *.* TO 'vai_tony_user'@'localhost';
FLUSH PRIVILEGES;



-----------------------------------------------
Come eseguire il command initialize_ai_platform.py
# Inizializzazione completa
python manage.py initialize_ai_platform

# Salta sezioni specifiche
python manage.py initialize_ai_platform --skip-prompts --skip-subscriptions

# Aggiorna dati esistenti
python manage.py initialize_ai_platform --update-existing













# fare il dump del database
python manage.py dumpdata > database_dump.json






